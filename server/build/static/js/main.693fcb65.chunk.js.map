{"version":3,"sources":["components/Footer.js","components/BeersList.js","components/SearchBar.js","components/Filter.js","pages/Home.js","pages/BeerPage.js","App.js","serviceWorker.js","index.js"],"names":["footerStyling","width","position","bottom","marginTop","copyRight","textAlign","right","top","marginBottom","Footer","style","BeersList","beers","className","map","beer","key","id","minHeight","labels","height","src","medium","alt","name","to","Search","searchByName","searchInput","onChange","value","type","placeholder","Filter","filterBeersByStyle","beerStyles","styleSelection","beerStyle","i","selected","Home","color","fontSize","BeerPage","state","beerId","props","match","params","getBeer","axios","get","then","setState","data","catch","err","console","log","this","abv","description","Component","App","fullBeersArray","getBeers","process","e","target","processSelection","trim","filter","toUpperCase","includes","exact","path","render","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.693fcb65.chunk.js","sourcesContent":["import React from 'react'\n\nconst footerStyling = {\n  width: '100%',\n  position: 'absolute',\n  bottom: '0px',\n  marginTop: '40px'\n}\n\nconst copyRight = {\n  textAlign: 'right',\n  position: 'relative',\n  right: '8%',\n  top: '80px',\n  marginBottom: '20px'\n\n}\n\nfunction Footer () {\n  return (\n    <footer style={footerStyling}>\n      <p style={copyRight}>@2019 | Cheers!</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './BeersList.css'\n\nfunction BeersList({ beers }) {\n  return (\n    <section className='beers-section'>\n      {beers.map(beer => {\n        return (\n          <div className='beer-container shadow' key={beer.id}>\n            <div>\n              <div style={{ minHeight: '200px' }}>\n                {beer.labels ? (\n                  <img\n                    style={{ height: '80px' }}\n                    src={beer.labels.medium}\n                    alt={beer.name}\n                  />\n                ) : (\n                  <img style={{ height: '80px' }} alt='' />\n                )}\n                <h2>\n                  <strong>{beer.name}</strong>\n                </h2>\n                {beer.style ? <p>{beer.style.name}</p> : <p />}\n              </div>\n              <Link to={`/${beer.id}`}>View Details</Link>\n            </div>\n          </div>\n        )\n      })}\n    </section>\n  )\n}\n\nexport default BeersList\n","import React from 'react';\nimport './SearchBar.css'\n\nfunction Search ({ searchByName, searchInput }) {\n  return (\n    <div>\n      <input className='search-bar shadow' onChange={searchByName} value={searchInput} type='text' placeholder='Search by name' />\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react';\nimport './Filter.css'\n\nfunction Filter ({ filterBeersByStyle, beerStyles, styleSelection }) {\n  return (\n    <div className='filter-wrapper'>\n      <select className='shadow' onChange={filterBeersByStyle}>\n        <option value=''>What's your type?</option>\n        <option value=''>ALL STYLES</option>\n        {beerStyles.map((beerStyle, i) => {\n          return <option key={i} value={beerStyle} selected={styleSelection === beerStyle}>{beerStyle}</option>\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport default Filter\n","import React from 'react'\nimport BeersList from '../components/BeersList'\nimport SearchBar from '../components/SearchBar'\nimport Filter from '../components/Filter'\n\nfunction Home ({\n  beers,\n  beerStyles,\n  filterBeersByStyle,\n  searchByName,\n  searchInput,\n  styleSelection\n}) {\n  return (\n    <section className='section-container shadow'>\n      <div style={{ textAlign: 'center' }}>\n        <h1 style={{ color: '#222', fontSize: '29px' }}>\n          Looking for your next beer?\n        </h1>\n        <p style={{ fontSize: '18px', position: 'relative', bottom: '10px' }}>\n          Start from here.\n        </p>\n      </div>\n      <div>\n        <SearchBar searchByName={searchByName} searchInput={searchInput} />\n        <Filter\n          filterBeersByStyle={filterBeersByStyle}\n          beerStyles={beerStyles}\n          styleSelection={styleSelection}\n        />\n      </div>\n      <BeersList beers={beers} />\n    </section>\n  )\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport './BeerPage.css'\n\nclass BeerPage extends Component {\n  state = {\n    beer: null,\n  }\n\n  beerId = this.props.match.params.id\n\n  getBeer = () => {\n    axios\n      .get(`/beers/${this.beerId}`)\n      .then(beer => {\n        this.setState({\n          beer: beer.data,\n        })\n      })\n      .catch(err => {\n        console.log(err, 'err')\n      })\n  }\n\n  componentDidMount() {\n    this.getBeer()\n  }\n  render() {\n    const beer = this.state.beer\n    return (\n      <section className=\"beer-page section-container\">\n       \n        {beer ? (\n          <div className=\"beer-wrapper shadow\">\n            {beer.labels && <img src={beer.labels.medium} alt={beer.name} />}\n            <h1>{beer.name}</h1>\n            {beer.abv && <span>Alcol: {beer.abv}</span>}\n            <p>{beer.description}</p>\n            <Link to=\"/\">> View all beers</Link>\n          </div>\n        ) : (\n          <p style={{ textAlign: 'center' }}>Beer coming...</p>\n        )}\n      </section>\n    )\n  }\n}\n\nexport default BeerPage\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport axios from 'axios'\nimport Footer from './components/Footer'\nimport Home from './pages/Home'\nimport BeerPage from './pages/BeerPage'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    beers: [],\n    fullBeersArray: [],\n    beerStyles: [],\n    searchInput: '',\n    styleSelection: '',\n  }\n\n  getBeers = () => {\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}beers`)\n      .then(beers => {\n        this.setState({\n          beers: beers.data.beers,\n          fullBeersArray: beers.data.beers,\n          beerStyles: beers.data.beerStyles,\n        })\n      })\n      .catch(err => {\n        console.log(err, 'err')\n      })\n  }\n\n  componentDidMount() {\n    this.getBeers()\n  }\n\n  searchByName = e => {\n    this.setState(\n      {\n        searchInput: e.target.value,\n      },\n      () => this.processSelection()\n    )\n  }\n\n  filterBeersByStyle = e => {\n    this.setState(\n      {\n        styleSelection: e.target.value,\n      },\n      () => this.processSelection()\n    )\n  }\n\n  processSelection() {\n    let beers = this.state.searchInput.trim()\n      ? this.state.fullBeersArray.filter(beer => {\n          return beer.name\n            .toUpperCase()\n            .includes(this.state.searchInput.toUpperCase())\n        })\n      : this.state.fullBeersArray\n\n    beers = this.state.styleSelection\n      ? beers.filter(beer => {\n          return beer.style && beer.style.name === this.state.styleSelection\n        })\n      : beers\n\n    this.setState({\n      beers,\n    })\n  }\n\n  render() {\n    return (\n      <section>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <Home\n                {...props}\n                beers={this.state.beers}\n                beerStyles={this.state.beerStyles}\n                filterBeersByStyle={this.filterBeersByStyle}\n                searchByName={this.searchByName}\n                searchInput={this.state.searchInput}\n                styleSelection={this.state.styleSelection}\n              />\n            )}\n          />\n          <Route exact path=\"/:id\" render={props => <BeerPage {...props} />} />\n        </Switch>\n        <Footer />\n      </section>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-poppins'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}